<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblImg.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>